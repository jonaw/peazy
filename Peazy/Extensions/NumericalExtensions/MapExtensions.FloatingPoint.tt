<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<#
	string[] floatingPointTypes = new []
	{
		"decimal",
		"double",
		"float"
	};
#>
/*******************************************************************************
*                                                                              *
*                            THIS FILE IS GENERATED                            *
*                                                                              *
*******************************************************************************/
using Peazy.Core;

namespace Peazy.Extensions
{
	public static partial class MapExtensions
	{
		<# // ****************************************************************** #>
		<# // *                                                                * #>
		<# // *       Create map implementations for floating point types      * #>
		<# // *                                                                * #>
		<# // ****************************************************************** #>
		<#
		foreach (var type in floatingPointTypes)
		{
		#>
		/// <summary>
        /// Map a value contained in a source range to value in a target range.
        /// </summary>
        /// <param name="value">Value to map</param>
        /// <param name="sourceMin">Source range minimum value</param>
        /// <param name="sourceMax">Source range maximum value</param>
        /// <param name="targetMin">Target range minimum value</param>
        /// <param name="targetMax">Target range maximum value</param>
        /// <returns>Returns the mapped value</returns>
		public static <#= type #> Map(this <#= type #> value, <#= type #> sourceMin, <#= type #> sourceMax, <#= type #> targetMin, <#= type #> targetMax)
			=> NumericHelpers.Map(value, sourceMin, sourceMax, targetMin, targetMax);

		<#
		}
		#>
	}
}